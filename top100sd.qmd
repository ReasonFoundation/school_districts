---
title: "Top100 School Districts"
format: html
editor: visual
---


```{r setup, include=FALSE, warning=FALSE, message=FALSE, echo=FALSE}
library(dplyr)
library(stringr)
library(ggplot2)
library(tidyr)
library(janitor)
library(plotly)
library(DT)
options(scipen = 999)
```

# School districts from Acfrs database 2020, 2021

```{r echo = FALSE}
db2020 <- readRDS("data/data_from_dbsite_2020.RDS") # Data queried Feb 21
db2021 <- readRDS("data/data_from_dbsite_2021.RDS")

sd2020_db <- readRDS("data/data_from_dbsite_2020.RDS") %>% 
  filter(category == "School District") %>% 
  mutate(id = as.character(id)) %>% 
  select(state, name,id, year, total_liabilities, net_pension_liability, net_opeb_liability, expenses, revenues)

sd2021_db <- readRDS("data/data_from_dbsite_2021.RDS") %>% 
  filter(category == "School District") %>% 
  mutate(id = as.character(id)) %>% 
  select(state, name,id, year, total_liabilities, net_pension_liability, net_opeb_liability, expenses, revenues)
nrow(db2020)
```

Data queried from database on Feb 21, 2023. There are `r nrow(db2020)` acfrs collected in 2020 and `r nrow(db2021) ` in 2021. Of which, the numbers of school districts acfrs are `r nrow(sd2020_db)` and `r nrow(sd2021_db` for 2020 and 2021, respectively. 

# NCES
```{r echo = FALSE}
nces <- rio::import(here::here("data", "ncesdata_DBBFFFC.xlsx"), skip = 14) %>% 
  clean_names() %>% 
  select(nces_district_id, district_name, county_name, city, state, students) %>% 
  rename(nces_original_name = district_name,
    ncesID = nces_district_id) %>% 
    drop_na(nces_original_name) %>% 
# take out 5 territories "AS" "DC" "GU" "PR" "VI"
  filter(!state %in% c("AS", "DC", "GU", "PR", "VI")) %>% 
  
# for NCES ID that has only 6 digits, adding a leading 0
  mutate(ncesID = ifelse(str_length(ncesID) < 7, paste0("0", ncesID), ncesID)) %>% 
mutate(students = as.numeric(students)) 
```


## Top SD in NCES
Excluding 5 US territories: "AS", "DC", "GU", "PR", "VI"
```{r echo = FALSE}
# 100 sd in NCES
top_sd_nces <- nces %>% 
  arrange(desc(students)) %>% slice(1:105) %>% arrange(nces_original_name) # must take more than 100 because could not find acfrs for 4 of the first 100 
datatable(top_sd_nces)

```

# Top SD in ACFRs

Only able to get Davidson County TN, Portland and 5 NY City sd. 
The rest 4 are not readily available.
https://www.bostonpublicschools.org/
https://oneccps.org/
https://www.mnps.org/
https://henricoschools.us/budget-finance/
```{r echo = TRUE}
dictionary <- readRDS("dictionary.RDS")
# get acfrsID into this top nces, using dictionary 
top_sd_acfrs <- top_sd_nces %>% left_join(dictionary) %>% drop_na(id) # drop those do not have acfrs id, not found in Acfrs database. They're picked up by HGarb team outside database

datatable(top_sd_acfrs)
```

SD in top 100 NCES that are not collected in current ACFRs
```{r echo = FALSE}
top_sd_nces %>% filter(!ncesID %in% top_sd_acfrs$ncesID) -> top_sd_acfrs_10
datatable(top_sd_acfrs_10)
```

## Apportion Acfrs data for New York City School Districts

NYC DOE reports total numbers of 32 school districts.
https://infohub.nyced.org/docs/default-source/default-document-library/2021-annual-financial-statements.pdf
Page 26, 33

Method: 1) Calculate the students share of each school district. 2) multiply this share to the DOE total. 

```{r, echo=TRUE}
# input number from DOE report 
nyc_2020 <- nces %>% filter(str_detect(nces_original_name, "(?i)NEW YORK CITY GEOGRAPHIC DISTRICT")) %>% 
#year 2020 - Department of Education NYC
  mutate(year = 2020, 
         doe_total_liabilities = 59391179000, #page 33
         doe_net_opeb = 35457858000, #page 33
         doe_net_pension = 0, #(Geoff checked, no net pension)
         doe_expenses = 30782114000,# page 26
         doe_total_asset = 66355469000, #page 33
         doe_revenues = 28104219000)   #page 26
  
nyc_2021 <- nces %>% filter(str_detect(nces_original_name, "(?i)NEW YORK CITY GEOGRAPHIC DISTRICT")) %>% 
#year 2021 - Department of Education NYC
  mutate(year = 2021,
         doe_total_liabilities = 48619741000, #page 33
         doe_net_opeb = 38982221000,#page 33
         doe_net_pension = -1137314, # page 33 (Geoff: adding - due to over funding, other than this, prob only state Wisconsin) 
         doe_expenses = 29278093000,# page 26
         doe_total_asset = 66152289000, #page 33
         doe_revenues = 28976372000) #page 26

nyc_20_21 <- rbind(nyc_2020, nyc_2021)
  
  nyc_20_21 %>% 
    # students share
  mutate(
  id = NA, 
  share_student = students/sum(students),
  
  # apportion financial data for all 32 sd
  total_liabilities = doe_total_liabilities*share_student,
  net_opeb_liability = doe_net_opeb*share_student,
  net_pension_liability = doe_net_pension*share_student,
  expenses = doe_expenses*share_student,
  revenues = doe_revenues*share_student) %>% 
  # 
  select(ncesID, nces_original_name, year, county_name, city, state, id, students, total_liabilities, net_opeb_liability, net_pension_liability, expenses, revenues) %>% 
  
# only get 5 of those who are in top100 largest
filter(ncesID %in% top_sd_acfrs_10$ncesID) -> nyc_20_21_5sd

```

## Manually input data for some other SD 

Davidson County TN
Portland SD 1J OR

```{r warning=FALSE, message=FALSE}
sd_96_2020 <- top_sd_nces %>% 
  left_join(top_sd_acfrs) %>% # to get id
  left_join(sd2020_db, by = "id") %>% # need to specify join by=id, if not, some rows in sd2020_db loose values (eg. id == 196828) 
  
  select(-c(name.y, name.x, state.y)) %>% 
  rename(state = state.x) %>% 

  # take out sd whose acfrs are not known to date
  filter(!nces_original_name %in% c("Boston", "CHESTERFIELD CO PBLC SCHS", "HENRICO CO PBLC SCHS", "OMAHA PUBLIC SCHOOLS")) %>% 
  
  # take out 5 sd of NYC to later rbind with nyc_20_21_5sd
  filter(state != "NY") %>% 
  
  # Collect data for some sd manually 
  mutate(year = 2020,
  total_liabilities = case_when(nces_original_name == "Davidson County"& state == "TN" ~ 0,
                                nces_original_name == "Portland SD 1J"& state == "OR" ~ 1882236000, 
                                TRUE ~ total_liabilities), #page 34
  
  net_pension_liability = case_when(nces_original_name == "Davidson County" & state == "TN" ~ 0,
                                    nces_original_name == "Portland SD 1J"& state == "OR" ~ 306140000, 
                                    TRUE ~ net_pension_liability), # page 34, Net pension liability-PERS
  
  net_opeb_liability = case_when(nces_original_name == "Davidson County" & state == "TN" ~ 0,
                                 nces_original_name == "Portland SD 1J"& state == "OR" ~ 81319999,
                                 TRUE ~ net_opeb_liability), # page 34, TOTAL OPEB liability-RHIS
  
  expenses = case_when(nces_original_name == "Davidson County" & state == "TN" ~ 0,
                       nces_original_name == "Portland SD 1J"& state == "OR" ~ 824384000, 
                       TRUE ~ expenses),#page 35
                       
  
  revenues = case_when(nces_original_name == "Davidson County" & state == "TN" ~ 0,
                       nces_original_name == "Portland SD 1J"& state == "OR" ~ (8271000 + 90072000 + 11368000 + 823400000), #page 35 (charges + operating + grant + Total general revenues)
                       TRUE ~ revenues))
```


```{r}
sd_96_2021 <- top_sd_nces %>% 
  left_join(top_sd_acfrs) %>% # to get id
  left_join(sd2021_db, by = "id") %>% # NOTE: filter(is.na(total_liabilities)) -> some have id carried from 2020, but no values for 2021
  select(-c(name.y, name.x, state.y)) %>% 
  rename(state = state.x) %>%  
  
  # take out sd whose acfrs are not known to date
  filter(!nces_original_name %in% c("Boston", "CHESTERFIELD CO PBLC SCHS", "HENRICO CO PBLC SCHS", "OMAHA PUBLIC SCHOOLS")) %>% 
  
  # take out 5 sd of NYC to later rbind with nyc_20_21_5sd
  filter(state != "NY") %>% 
  
  mutate(year = 2021,
  total_liabilities = case_when(nces_original_name == "Davidson County"& state == "TN" ~ 0,
                                nces_original_name == "Portland SD 1J"& state == "OR" ~ 2380580000,
                                TRUE ~ total_liabilities),
  
  net_pension_liability = case_when(nces_original_name == "Davidson County" & state == "TN" ~ 84041613,
                                    nces_original_name == "Portland SD 1J"& state == "OR" ~ 521329000,
                                    TRUE ~ net_pension_liability), # page 32, Net pension liability-PERS
  
  net_opeb_liability = case_when(nces_original_name == "Davidson County" & state == "TN" ~ 1061732808, # page B-93, column School professional employee
                                 nces_original_name == "Portland SD 1J"& state == "OR" ~ 78581000,
                                 TRUE ~ net_opeb_liability), # page 32, TOTAL OPEB liability-RHIS
  
  expenses = case_when(nces_original_name == "Davidson County" & state == "TN" ~ 1195361854,
                       nces_original_name == "Portland SD 1J"& state == "OR" ~ 931870000,
                       TRUE ~ expenses), #page 33
  
  revenues = case_when(nces_original_name == "Davidson County" & state == "TN" ~ 488401680,
                       nces_original_name == "Portland SD 1J"& state == "OR" ~ (1914000 + 113835000 + 1319000 + 822868000), # Geoff: need to take sum 4 of these: charges, operating, capital grant and general revenues)
                       TRUE ~ revenues) #page 33
)

```

```{r echo = FALSE}
sd_96_2021 %>% filter(is.na(total_liabilities)) %>% select(-c(9:13)) -> missing2021

```

# Top 100 largest school districts by enrollments 2020, 2021
```{r}
top100_result <- sd_96_2020 %>% rbind(sd_96_2021) %>% rbind(nyc_20_21_5sd) %>% 
        arrange(desc(students)) %>% 
        mutate(liability_per_student = total_liabilities/students, 
         netpension_per_student = net_pension_liability/students,
         netOPEB_per_student = net_opeb_liability/students,
         expenses_per_student = expenses/students,
         revenues_per_student = revenues/students,
         liability_rev_ratio = total_liabilities/revenues
         ) 
#top100_result %>% write.csv("top100sd_result.csv")
datatable(top100_result)
```

## 5 sd still do not have 2021 data
```{r}
top100_result %>% filter(is.na(total_liabilities)) %>% datatable()
```

## The top 100 largest school districts by state
```{r echo=FALSE }
library(forcats)
top100_result %>% 
  filter(!is.na(total_liabilities)) %>% 
  group_by(year) %>% # to add count of each year
  add_count(state) %>% select(state, n, year) %>% distinct() %>% arrange(desc(n)) %>% 
  ggplot(aes(fct_reorder(state, n), n, group = year, label = n)) +
  geom_col(fill = "purple", alpha = .4) +
  geom_text(color = "purple", nudge_y = 0.3) +
  facet_wrap(~year) +
  coord_flip() +
  labs(title = "The top 100 largest school districts by state",
       x = "",
       y = "Number of school district") +
  theme_minimal() 
```
## Total Liabilities per Student

```{r echo=FALSE}
top100_result %>% 
  ggplot(aes(students, total_liabilities, label = nces_original_name, group = year))+
  geom_point(aes(size = liability_per_student, color = year)) +
  geom_text(data = top100_result %>% arrange(desc(liability_per_student)) %>% slice(1:4)) +
  
  scale_y_continuous(labels = scales::dollar_format())+

labs(x = "Students (Size of circles represent size of liability per students)", y = "Total Liabilities",
     title = "Total Liabilities per Student FY 2020 & 2021",  
     caption = "Size of circles represent size liability per student") +
 theme_minimal()+
  theme(legend.position = "none",
        plot.margin = margin(t = 20,  # Top margin
                             r = 50,  # Right margin
                             b = 40,  # Bottom margin
                             l = 10)) -> p  # Left margin)
        
ggplotly(p)
  
```
## Net Pension Liabilities per Student
```{r echo=FALSE }
top100_result %>% 
  ggplot(aes(students, net_pension_liability, label = nces_original_name, group = year))+
  geom_point(aes(size = netpension_per_student, color = year)) +
  geom_text(data = top100_result %>% arrange(desc(netpension_per_student)) %>% slice(1:3), nudge_y = 1000000000, color = "darkgreen") +
  
  scale_y_continuous(labels = scales::dollar_format())+
 
labs(x = "Students", y = "Net Pension Liabilities",
     title = "Net Pension Liabilities per Student") +
 theme_minimal()+
  theme(
        legend.position = "none",
        plot.margin = margin(t = 20,  # Top margin
                             r = 50,  # Right margin
                             b = 40,  # Bottom margin
                             l = 10)) -> p2 # Left margin)
        
ggplotly(p2)
```
## Net OPEB Liabilities per Student
```{r}
top100_result %>% 
  ggplot(aes(students, net_opeb_liability, label = nces_original_name, group = year))+
  geom_point(aes(size = netOPEB_per_student, color = year)) +
  geom_text(data = top100_result %>% arrange(desc(netOPEB_per_student)) %>% slice(1:3), color = "orange") +
  
  scale_y_continuous(labels = scales::dollar_format())+
  #scale_x_discrete(labels = scales::comma_format())+
 
labs(x = "Students", y = "Net OPEB Liabilities",
     title = "Net OPEB Liabilities per Student") +
 theme_minimal()+
  theme(
        legend.position = "none",
        plot.margin = margin(t = 20,  # Top margin
                             r = 50,  # Right margin
                             b = 40,  # Bottom margin
                             l = 10)) -> p3 # Left margin)
        

ggplotly(p3)
```
```{r}
top100_result %>% 
  ggplot(aes(total_liabilities, revenues, label = nces_original_name, group = year))+
  geom_point(aes(size = liability_rev_ratio, color = year)) +
  #geom_text(data = top100_result %>% arrange(desc(liability_rev_ratio)) %>% slice(1:3), color = "red") +
  
  scale_y_continuous(labels = scales::dollar_format())+
   scale_x_continuous(labels = scales::dollar_format())+

labs(x = "Total liabilities", y = "Revenues", 
     title = "Total liabilities to Revenue ratio") +
 theme_minimal()+
  theme(
        legend.position = "none",
        plot.margin = margin(t = 20,  # Top margin
                             r = 50,  # Right margin
                             b = 40,  # Bottom margin
                             l = 10)) -> p4 # Left margin)
        
ggplotly(p4)
```

